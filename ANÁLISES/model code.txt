
model {

   #### 1. SELECT PHYLOGENY SAMPLE OVER 1,000 AVAILABLE ####
   for (tree in 1:ntrees) {
   c[tree]<-1/ntrees #probability equal
   }
   CC ~ dcat(c[]) #select 1 sample

   #### 2. ABUNDANCE PRIORS ####
   ### 2.1 SPECIES FIXED ABUNDANCE INTERCEPT (LOG SCALE) ###
   for (k in 1:nspec){ 
   lambda.b0[k] ~ dnorm(0,0.01)
   }

   ### 2.2 SPECIES ABUNDANCE SLOPES AS FUNCTION OF PHYLOGENY ###
   lambda.p ~ dunif(0,1)  #phylogenetic signal prior, uniform distribution between 0 and 1
   mt.lambda[1:nspec,1:nspec] <- lambda.p*VCOV[,,CC] + (1-lambda.p)*ID[,] #phylogenetic signal formula
   for(b in 1:5){ # coefficients
   sigma.lambda[b] ~ dunif(0,20) 
   lambda.b[1:nspec,b] ~ dmnorm.vcov(zeros.lambda[,b],(sigma.lambda[b]^2)*mt.lambda[,]) #multivariate normal dist
   for(k in 1:nspec){
   zeros.lambda[k,b] <- 0
   }}
  
   ### 2.3 SPATIALLY STRUCTURED SITE-ABUNDANCE RANDOM EFFECT TO OVERDISPERSION ###
    a.spt ~ dunif(0,24.02) #spatial autocorrelation prior, uniform distribution between 0 and 24.02. 24.02 = max distance between sites 
    sigma.spt ~ dunif(0,20)  # variance at dist = 0
    for (i in 1:nsites) {
       zeros.spt[i] <- 0
     for (j in 1:nsites) {
      G[i,j] <- exp(-DIST[i,j]/a.spt) #exponential decay term
      }}
    for (k in 1:nspec){
      gamma[1:nsites,k] ~ dmnorm.vcov(zeros.spt[], (sigma.spt^2)*G[,]) #multivariate normal dist
    }

     #### 3. CAPTURE/DETECTION PRIORS ####
     for(p in 1:2){ # Loop over 2 sampling methods, p1=mist nets, ARU
     ### 3.1 COMMUNITY-SHARED P ### equal detection prob under average environmental conditions for all species
      p.bar[p] ~ dbeta(1,1)T(0.001,0.999) # beta distribution
      
     ### 3.2. SPECIES DETECTION SLOPES AS FUNCTION OF PHYLOGENY ###
      det.p[p] ~ dunif(0,1)  #phylogenetic signal prior
      mt.det[1:nspec,1:nspec,p] <- det.p[p]*VCOV[,,CC] + (1-det.p[p])*ID[,] #phylogenetic signal formula
      for(b in 1:2){ # coefficients
      sigma.det[b,p] ~ dunif(0,20)
      det.b[1:nspec,b,p] ~ dmnorm.vcov(zeros.det[,b,p],(sigma.det[b,p]^2)*mt.det[,,p]) #multivariate normal dist
      for(k in 1:nspec){
      zeros.det[k,b,p] <- 0
      }}}

   #### 4. MODEL LOOP ####
   for(k in 1:nspec){                # Loop over species
     for (i in 1:nsites){ # Loop over sites
       for (s in 1:nseasons){ # Loop over seasons
      
      ### 4.1 ABUNDANCE SUBMODEL ###
      log(lambda[i,s,k]) <- lambda.b0[k] +				#intercept
                            lambda.b[k,1] * site.covs[i,s,1] +		#season
                            lambda.b[k,2] * site.covs[i,s,2] +		#elev
                            lambda.b[k,3] * site.covs[i,s,3] +		#season*elev
 			    lambda.b[k,4] * pow(site.covs[i,s,2],2) +	#elev2
			    lambda.b[k,5] * pow(site.covs[i,s,3],2) +	#season*elev2
                            gamma[i,k]

      N[i,s,k] ~ dpois(lambda[i,s,k]) #latent abun

     ### 4.2 DETECTION SUBMODELS ###
     ## 4.2.1 Mist nets sampling removal model (Chandler, 2011; Kery and Royle, 2015)
     
     #model capture prob as a logit funciton of a assemblage-shared intercept and species coeffs. to night temperature     
     logit(cp[i,s,k]) <-   logit(p.bar[1]) + 				#intercept
                           det.b[k,1,1] * obs.covs[i,s,1,1] +	        #temp
                           det.b[k,2,1] * pow(obs.covs[i,s,1,1],2) 	#temp2
     
     #Since JAGS does not support the multinomial dist with unobserved data (undetected individuals), 
     #we followed Chandler (2011) and parameterize the sampling removal model as a sequence of binomial trials, which is equivalent.
     mistnets.Y[i,s,1,k] ~ dbin(cp[i,s,k], N[i,s,k]) #sampling period 1, binomial trial with prob = cp and size = N
     N2[i,s,k] <- N[i,s,k] - mistnets.Y[i,s,1,k] # N2 = portion of N not captured in sampling period 1
     mistnets.Y[i,s,2,k] ~ dbin(cp[i,s,k], N2[i,s,k]) #sampling period 2, binomial trial with prob = cp and size = N2
     
     ## 4.2.2. ARUs submodel (Royle and Nichols, 2003)
     for (j in 1:3){
     #model detection prob as a logit funciton of a assemblage-shared intercept and species coeffs. to night temperature  
     logit(dp[i,s,j,k]) <- logit(p.bar[2]) + 				#intercept
                           det.b[k,1,2] * obs.covs[i,s,j,2] +		#temp
			   det.b[k,2,2] * pow(obs.covs[i,s,j,2],2)	#temp2
     
      r[i,s,j,k] <- 1-pow(1-dp[i,s,j,k],N[i,s,k]) #Royle and Nichols (2003) formula
      ARU.Y[i,s,j,k] ~ dbern(r[i,s,j,k]) #bernoulli trial with prob = r
      }#rep

      } #season
     }#site
    }#specie
 }#model

